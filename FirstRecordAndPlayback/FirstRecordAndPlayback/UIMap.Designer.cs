// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace FirstRecordAndPlayback
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls; // To identify the Windows Controls
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// This method tests the addition of two numbers
        /// </summary>
        public void AdditionOperation()
        {
            #region Variable Declarations
            WinTitleBar uICalculatorTitleBar = this.NextGenSim.UICalculatorTitleBar;
            WinButton uIItem8Button = this.NextGenSim.UIItemWindow.UIItem8Button;
            WinButton uIItem9Button = this.NextGenSim.UIItemWindow1.UIItem9Button;
            WinButton uIAddButton = this.NextGenSim.UIItemWindow2.UIAddButton;
            WinButton uIItem2Button = this.NextGenSim.UIItemWindow3.UIItem2Button;
            WinButton uIItem3Button = this.NextGenSim.UIItemWindow4.UIItem3Button;
            WinButton uIEqualsButton = this.NextGenSim.UIItemWindow5.UIEqualsButton;
            #endregion

            // Click 'Calculator' title bar
            // Coordinate does not matter
            // it could be deleted
            Mouse.Click(uICalculatorTitleBar);

            // Click '8' button
            Mouse.Click(uIItem8Button);

            // Click '9' button
            Mouse.Click(uIItem9Button);

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(24, 10));

            // Click '2' button
            Mouse.Click(uIItem2Button);

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(21, 14));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton);
        }
        
        // This property is a type of UICalculatorMainWindow
        // with the name of NextGenSim.
        // NextGenSim is the name of the property. Nothing more
        // no related to class whatever
        // we will define the class UICalculatorMainWindow below
        #region Properties
        public UICalculatorMainWindow NextGenSim
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorMainWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICalculatorMainWindow mUICalculatorWindow;
        #endregion
    }
    
    // How we define the UICalculatorMainWindow
    // it will inherit from WinWindow
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICalculatorMainWindow : WinWindow
    {
        // constructor   
        public UICalculatorMainWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UICalculatorTitleBar
        {
            get
            {
                if ((this.mUICalculatorTitleBar == null))
                {
                    this.mUICalculatorTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUICalculatorTitleBar.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICalculatorTitleBar;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUICalculatorTitleBar;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow : WinWindow
    {
        // try to send the search property to the base class
        // The WinWindow (UIItemWindow) is identified using ControlID Property "138"
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "138";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem8Button
        {
            get
            {
                if ((this.mUIItem8Button == null))
                {
                    this.mUIItem8Button = new WinButton(this);
                    #region Search Criteria
                    // SearchProperties are used to identify control using its properties
                    this.mUIItem8Button.SearchProperties[WinButton.PropertyNames.Name] = "8";
                    this.mUIItem8Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem8Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem8Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "139";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem9Button
        {
            get
            {
                if ((this.mUIItem9Button == null))
                {
                    this.mUIItem9Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem9Button.SearchProperties[WinButton.PropertyNames.Name] = "9";
                    this.mUIItem9Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem9Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem9Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "93";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "132";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "2";
                    this.mUIItem2Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "133";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem3Button
        {
            get
            {
                if ((this.mUIItem3Button == null))
                {
                    this.mUIItem3Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem3Button.SearchProperties[WinButton.PropertyNames.Name] = "3";
                    this.mUIItem3Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem3Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem3Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    this.mUIEqualsButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEqualsButton;
        #endregion
    }
}
